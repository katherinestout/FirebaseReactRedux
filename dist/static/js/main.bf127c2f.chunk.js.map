{"version":3,"sources":["components/layout/SignedInLinks.js","components/store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","components/store/actions/projectActions.js","App.js","serviceWorker.js","components/store/reducers/authReducer.js","components/store/reducers/projectReducer.js","components/store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","href","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","error","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bf127c2f.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {signOut} from '../store/actions/authActions';\n\n\nconst SignedInLinks = (props) => {\n    \n    return (\n        <ul className=\"right\">\n        <li><NavLink to ='/create'>New Project </NavLink></li>\n        <li> <a href = \"true\" onClick={props.signOut}>Log Out </a></li>\n        <li><NavLink to ='/' \n            className='btn btn-floating pink lighten-1'>\n            {props.profile.initials}\n            </NavLink></li>\n        </ul>\n        \n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n      const firebase = getFirebase();\n      \n      firebase.auth().signInWithEmailAndPassword(\n        credentials.email,\n        credentials.password\n      ).then(() => {\n        dispatch({ type: 'LOGIN_SUCCESS' });\n      }).catch((err) => {\n        dispatch({ type: 'LOGIN_ERROR', err });\n      });\n  \n    }\n  }\n  \n  export const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n      const firebase = getFirebase();\n  \n      firebase.auth().signOut().then(() => {\n        dispatch({ type: 'SIGNOUT_SUCCESS' })\n      });\n    }\n  }\n  \n  export const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n      const firebase = getFirebase();\n      const firestore = getFirestore();\n  \n      firebase.auth().createUserWithEmailAndPassword(\n        newUser.email, \n        newUser.password\n      ).then(resp => {\n        return firestore.collection('users').doc(resp.user.uid).set({\n          firstName: newUser.firstName,\n          lastName: newUser.lastName,\n          initials: newUser.firstName[0] + newUser.lastName[0]\n        });\n      }).then(() => {\n        dispatch({ type: 'SIGNUP_SUCCESS' });\n      }).catch((err) => {\n        dispatch({ type: 'SIGNUP_ERROR', err});\n      });\n    }\n  }","import React from 'react';\nimport {NavLink } from 'react-router-dom';\n\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n        <li><NavLink to ='/signup'>SignUp </NavLink></li>\n        <li><NavLink to ='/signin'>LogIn</NavLink></li>\n       \n        </ul>\n        \n    )\n}\n\nexport default SignedOutLinks;","import React from 'react';\nimport {Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks.js';\nimport SignedOutLinks from './SignedOutLinks';\nimport {connect} from 'react-redux';\n//import { map } from '@firebase/util';\n\nconst Navbar = (props) => {\n    const {auth, profile} = props;\n   // console.log(auth);\n\n   //turnery operator to show or hide links depending on uid matches\n   const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks/>;\n\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n        <div className=\"container\">\n        <Link to ='/' className=\"brand-logo\">\n        KatProjectPlan\n        </Link>\n        \n        {links}\n\n        </div>\n        \n        </nav>\n        \n    )\n}\n\n//we can access this state in this property\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return{\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = (props) => {\n    const{notifications} =props;\n    return(\n        <div className=\"section\">\n        <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n        <span className=\"card-title\">Notifications</span>\n        <ul className=\"notifications\">\n            {notifications && notifications.map(item => {\n                return (\n                    <li key={item.id}>\n                    <span className=\"pink-text\"> {item.user} </span>\n                    <span>{item.content}</span>\n                    <div className = \"grey-test note-date\">\n                    {moment(item.time.toDate()).fromNow()}\n                    </div>\n                    </li>\n                )\n            })}\n\n        </ul>\n        </div>\n        </div>\n        </div>\n    )\n}\nexport default Notifications;","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary = ({project}) => {\n    return (\n\n        <div className=\"card z-depth-0 project-summary\">\n        <div className =\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{project.title}</span>\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n        <p className= \"grey-text\">\n        {moment(project.createdAt.toDate()).calendar()}\n        </p>\n        </div>\n        </div>\n    )\n}\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport {Link} from 'react-router-dom';\n\n//if you have projects do this, if not don't map\n//taking project as a prop\n    //cycling thru projects if we have it\n        //return project summary and assigning key value\nconst ProjectList = ({projects}) => {\n    return(\n        <div className='project-list section'>\n        \n        {projects && projects.map(project=>{\n            return(\n                <Link to ={'/project/' + project.id} key ={project.id}>\n                <ProjectSummary project ={project}/>\n                </Link>\n            )\n        })}\n\n        </div>\n    )\n}\nexport default ProjectList;","import React, {Component} from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport {connect} from 'react-redux';\n//connecting to the firebase\nimport { firestoreConnect } from 'react-redux-firebase';\nimport {compose} from 'redux';\nimport {Redirect} from 'react-router-dom';\n\n\nclass Dashboard extends Component{\n    render() {\n        \n       // console.log(this.props);\n        const {projects, auth, notifications} = this.props;\n        //if not logged in, redirect\n        if(!auth.uid) return  <Redirect to ='/signin'/>\n        \n        return (\n            <div className=\"dashboard container\">\n            <div className=\"row\">\n            <div className=\"col s12 m6\">\n            <ProjectList projects = {projects}/>\n            </div>\n            <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications}/>\n            </div>\n            </div>\n            </div>\n        )\n    }\n}\n//mapping state to props, higher order component\nconst mapStateToProps = (state) =>{\n    console.log(state);\n    return{\n        projects: state.firestore.ordered.projects,\n        //tell if user is logged in or not\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n//now can access it by props.project inside the component above\n\n\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        //tells which collection to connect to\n        //whenever the DB is changed it triggers the firestore reducer\n        {collection: 'projects', orderBy: ['createdAt', 'desc']},\n        {collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n    ]))(Dashboard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport {Redirect} from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\n  const { project, auth } = props;\n   //if not logged in, redirect\n   if(!auth.uid) return  <Redirect to ='/signin'/>\n  \n  console.log(props);\n\n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Hold on! Loading project...</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(state);\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null\n  return {\n    project: project,\n    auth: state.firebase.auth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{\n    collection: 'projects'\n  }]))(ProjectDetails)","import React, { Component } from 'react'\nimport {connect} from 'react-redux';\nimport {signIn} from '../store/actions/authActions';\nimport {Redirect} from 'react-router-dom';\n\n class SignIn extends Component {\n     state = {\n        email: \"\",\n        password:\"\"\n\n     }\n//gets the id of whatever input field is being updated\n//and updates state of value of whatever is being updated\n     handleChange = (e) => {\n         this.setState({\n             [e.target.id]: e.target.value\n         })\n     }\n//prevents default action of form being submitted\n//console log the state\n     handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n\n  render() {\n    const {authError, auth}= this.props;\n     //if logged in, redirect\n     if(auth.uid) return  <Redirect to ='/'/>\n\n    return (\n      <div className=\"container\">\n      <form onSubmit={this.handleSubmit} className=\"white\">\n      <h5 className = \"grey-text text-darken-3\">Sign In!</h5>\n      <div className=\"input-field\">\n      <label htmlFor=\"email\">Email</label>\n      <input type =\"email\" id=\"email\" onChange={this.handleChange}/>\n      </div>\n      <div className=\"input-field\">\n      <label htmlFor=\"password\">Password</label>\n      <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n      </div>\n      <div className=\"input-field\">\n      <button className=\"btn pink z-depth-0\">Login</button>\n      \n      <div className=\"red-text center\">\n      {authError ? <p>{authError}</p> : null}\n      </div>\n      \n      </div>\n      </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {signUp} from './../store/actions/authActions';\n\n class SignUp extends Component {\n     state = {\n        email: \"\",\n        password:\"\",\n        firstName:\"\",\n        lastName:\"\"\n     }\n\n\n//gets the id of whatever input field is being updated\n//and updates state of value of whatever is being updated\n     handleChange = (e) => {\n         this.setState({\n             [e.target.id]: e.target.value\n         })\n     }\n//prevents default action of form being submitted\n//console log the state\n     handleSubmit = (e) => {\n        e.preventDefault();\n        //calling action!\n        //this.state represents new user which we call from below in mapdispatchtoprops\n        this.props.signUp(this.state)\n    }\n\n  render() {\n    const {auth, authError} = this.props;\n     //if logged in, redirect\n     if(auth.uid) return  <Redirect to ='/'/>    \n\n    return (\n      <div className=\"container\">\n      <form onSubmit={this.handleSubmit} className=\"white\">\n      <h5 className = \"grey-text text-darken-3\">Sign Up!</h5>\n      <div className=\"input-field\">\n      <label htmlFor=\"email\">Email</label>\n      <input type =\"email\" id=\"email\" onChange={this.handleChange}/>\n      </div>\n      <div className=\"input-field\">\n      <label htmlFor=\"password\">Password</label>\n      <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n      </div>\n      <div className=\"input-field\">\n      <label htmlFor=\"firstName\">First Name</label>\n      <input type =\"text\" id=\"firstName\" onChange={this.handleChange}/>\n      </div>\n      <div className=\"input-field\">\n      <label htmlFor=\"lastName\">Last Name</label>\n      <input type =\"text\" id=\"lastName\" onChange={this.handleChange}/>\n      </div>\n      <div className=\"input-field\">\n      <button className=\"btn pink z-depth-0\">SignUp</button></div>\n      <div className=\"red-text center\">\n      {authError ? <p>{authError}</p> : null} \n      </div>\n\n      \n      </form>\n        \n      </div>\n    )\n  }\n}\n\n\n\nconst mapStateToProps = (state) => {\n  return{\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    signUp: (newUser) => dispatch(signUp(newUser))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, { Component } from 'react';\nimport {createProject} from '../store/actions/projectActions';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\n\n class CreateProject extends Component {\n     state = {\n       title:\"\",\n       content:\"\"\n\n     }\n//gets the id of whatever input field is being updated\n//and updates state of value of whatever is being updated\n     handleChange = (e) => {\n         this.setState({\n             [e.target.id]: e.target.value\n         })\n     }\n//prevents default action of form being submitted\n//console log the state\n     handleSubmit = (e) => {\n        e.preventDefault();\n        //console.log(this.state);\n        this.props.createProject(this.state)\n        //passes it down to bottom and blah blah runs the createProject action and then can add it to data base blah blah\n        this.props.history.push('/');\n      }\n\n  render() {\n    const {auth} = this.props;\n    //if not logged in, redirect\n    if(!auth.uid) return  <Redirect to ='/signin'/>\n\n    return (\n      <div className=\"container\">\n      <form onSubmit={this.handleSubmit} className=\"white\">\n      <h5 className = \"grey-text text-darken-3\">Create a Project</h5>\n      <div className=\"input-field\">\n      <label htmlFor=\"title\">Title</label>\n      <input type =\"text\" id=\"title\" onChange={this.handleChange}/>\n      </div>\n\n      <div className=\"input-field\">\n      <label htmlFor=\"content\">Project Content</label>\n      <textarea id =\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n      </div>\n      <div className=\"input-field\">\n\n      <button className=\"btn pink z-depth-0\">Create!</button></div>\n      </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    //whatever property we want to add to the props we add to this object\n    //add method createProject\n    createProject:(project) => dispatch(createProject(project))\n\n//dispatch is calling createProject\n\n    //when we call props.createProject: and pass in a project, it will run the function and\n    //perform a dispatch somehow return the thing in createProject from the create project action\n  //aka we can access createProject because of this! makes it available\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","export const createProject = (project) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n\n        //make a reference to firestore DB\n        const firestore = getFirestore();\n\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        //making it possible to add project objects\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            //generates id\n            authorId: authorId,\n            createdAt: new Date()\n            //.then is the callback when the task above is complete\n        }).then(() => {\n            dispatch({type: 'CREATE_PROJECT', project});\n        }).catch((err) => {\n            dispatch({type: 'CREATE_PROJECT_ERROR', err });\n        })\n        //make asynch call to DB\n        dispatch({type: 'CREATE_PROJECT', project});\n\n    }\n};","import React, { Component } from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n\n      <Navbar/>\n      <Switch>\n        <Route exact path ='/' component={Dashboard} />\n        <Route path ='/project/:id' component={ProjectDetails}/>\n        <Route path ='/signin' component={SignIn}/>\n        <Route path ='/signup' component={SignUp}/>\n        <Route path ='/create' component={CreateProject}/>\n\n      </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) =>{\n    //check action type\n    switch(action.type){\n        case 'LOGIN_ERROR':\n        console.log('Login error!!')\n        return {\n            ...state,\n            authError: 'Login has failed'\n        }\n        case 'LOGIN_SUCESS':\n        console.log('Login success');\n        return {\n            ...state,\n            authError: null\n        }\n        case 'SIGNOUT_SUCESS':\n        console.log('signout sucess');\n        return state;\n\n        case 'SIGNUP_SUCCESS':\n        console.log('Signup Success!');\n        return{\n            ...state,\n            authError: null\n        }\n        case 'SIGNUP_ERROR':\n        console.log('signup ERROR');\n        return{\n            ...state,\n            authError: action.err.message\n        }\n        default:\n        return state;\n    }\n}\n\nexport default authReducer;","const initState = {\n    projects:[\n        {id: '1', title: 'help me find', content: 'blhahs'},\n        {id: '2', title: 'help m', content: 'blhahs'},\n        {id: '3', title: 'help ', content: 'blhahs'}\n    ]\n}\n//^all of these are stored on a project property in state\n\nconst projectReducer = (state = initState, action) =>\n\n{\n    //check action type\n    switch(action.type) {\n        case 'CREATE_PROJECT':\n        console.log('created project', action.project);\n        return state;\n        \n        case 'CREATE_PROJECT_ERROR':\n        console.log('create project error', action.error);\n        return state;\n\n        default:\n        return state;\n    }\n}\n\nexport default projectReducer;","//combining both reducers\nimport authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport {combineReducers} from 'redux';\n\n//synchs firestore data with the state\nimport { firestoreReducer} from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\n//auth and project updates information on auth property in state\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    /* this firestore reducer will automatically synch firestore \n    property on the state object to our data in the database\n    it will retrive the data for us\n    and it is also dependent on what component is active \n    at the time \n    however we need to tell it exactly which data to synch*/\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Initialize Firebase\nvar config = {\n    apiKey: \"AIzaSyCUK54s8q7htShwUkXsy6_zK4NV4jb6iPc\",\n    authDomain: \"katprojectplan.firebaseapp.com\",\n    databaseURL: \"https://katprojectplan.firebaseio.com\",\n    projectId: \"katprojectplan\",\n    storageBucket: \"katprojectplan.appspot.com\",\n    messagingSenderId: \"343912460918\"\n  };\n  firebase.initializeApp(config);\n  firebase.firestore().settings({timestampsInSnapshots: true});\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport rootReducer from './components/store/reducers/rootReducer';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\n//connecting everything\nconst store = createStore(rootReducer, \n    compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        \n    //this is how it knows to communicate to the firestore DB\n        reduxFirestore(fbConfig),\n        //add enhancer, firestoreforprofile synches profile, userprofile tells what to use\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n    ));\n\n//the DOM will not render untill firebase auth is ready!    \nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store ={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n})\n\n\n"],"sourceRoot":""}